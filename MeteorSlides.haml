%head
  %title MeteorSlides
%body
  {{> t}}

%template{:name => "t"}
  .reveal
    .slides
      %section
        %h1 Meteor.js
        %h3 Building Dynamic Web Apps
        %p
          %small
            %a{:href => "http://chenx.co.za"} Che` Nxusani
        %p
          %small
            %a{:href => "http://chenx.co.za"} @code_dependant
        %p
          %small
            %a{:href => "http://chenx.co.za"} http://chenx.co.za

      %section
        %h2 About me
        %img(src="/images/snapshot.jpg" style="width:10%;")
        %br
        %h4 Software Developer
        %br
        %h6
          %small
            I use
          %br
          Dgango, Rails, Backbone.js, Meteor.js
        %h6
          %small
            I love
          %br
          Coffeescript, Haml, Sass
        %br
        %h6(style="margin-bottom:0px")
          %small
            I work
        %img(src="/images/islogo.jpg" style="background: white;")

        %br
        %br
        %h6(style="margin-bottom:0px")
          %small
            I own
        %img(src="/images/logo.png" style="background: white; padding: 5px;")


      / %section
      /   %video(src="/images/first_vine.mp4" id="post_html5_api" class="vjs-tech" loop="" preload="auto")

      %section
        %h2 Why Meteor.js?
        %br
        %h5 We're building web apps differently
        %br
        %h5 We need to rethink our approach
        %br
        %h5 We need fundementally different web frameworks

      %section
        %h4 The Web
        %img(src="/images/pigeon.png" style="width:10%;")
        %img(src="/images/TheWeb.png")

        %br
        %br
        %br
        %div.fragment
          %h4 The Cloud
          %img(src="/images/cellphones.jpg" style="width:10%;")
          %img(src="/images/TheCloud.png")

      %section
        %h2 Work-arounds

        %br
        %h5 Local Caching
        %br
        %h5 Interval Polling
        %br
        %h5 Change Management
        %br
        %h5 Nested Callbacks

      %section
        %h2 Our SPA's Built the Old Way
        %img(src="/images/notrobust.gif")

      %section
        %h2 Meteors guiding principles
        .fragment
          %br
          %h5 Pure Javascript, same API's on server and client
        .fragment
          %br
          %h5 Data over the wire, not HTML
        .fragment
          %br
          %h5 Real-time communication between server and client
        .fragment
          %br
          %h5 Responsive & Reactive User Interfaces
        .fragment
          %br
          %h5 Radically simpler, simplicity == productivity


      %section
        %h2 Data

        %h4 Publish/Subscribe Based
        %br
        %h6 Server
        %pre
          %code
            = find_and_preserve
            :plain
              Posts = new Meteor.Collection('posts')

              Meteor.publish('all-posts', function(){
                return Posts.find({public: true})
              });

              Meteor.publish('posts-by-author', function(authorId){
                return Posts.find({public: true, authorId: authorId});
              });

              Meteor.publish('my-posts', function(){
                if(this.userId)
                  return Posts.find({authorId: this.userId});
              });

        %h6 Client
        %pre
          %code
            = find_and_preserve
            :plain
              Posts = new Meteor.Collection('posts')

              Meteor.subscribe('all-posts')

              Meteor.subscribe('posts-by-author', Session.get("authorId"))

              Meteor.subscribe('my-posts')



      %section
        %h2 Security
        %h4 Allow/Deny
        %br
        %h6 Server

        %pre
          %code
            = find_and_preserve
            :plain

              Posts.allow({
                insert: function(userId, post){
                  if(this.userId) // will be true if user is logged in
                    return true;  // allow the insertion
                  else
                    return false; // do not allow insertion
                }
              });
              Posts.deny({
                insert: function(userId, post){
                  if(this.userId) // will be true if user is logged in
                    return false;  // do not deny insertion
                  else
                    return true; // deny insertion
                }
              });

      %section
        %h2 Demo Time
        %br
        %br
        %br
        %img(src="/images/programming.gif")